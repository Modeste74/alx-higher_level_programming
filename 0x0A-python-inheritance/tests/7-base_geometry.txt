The ``7-base_geometry`` module
==========================

Using ``BaseGeometry``
-------------------

``BaseGeometry`` from the ``7-base_geometry`` module:
	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
	>>> bg = BaseGeometry()

Checking for too many arguments:
	>>> bg.area(1)
	Traceback (most recent call last):
	...
	TypeError: area() takes 1 positional argument but 2 were given

Checking for area with no args:
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Checking for num == 0:
	>>> bg.integer_validator("num", 0)
	Traceback (most recent call last):
	...
	ValueError: num must be greater than 0

Checking for num > 0:
	>>> bg.integer_validator("num", 4)
	
Checking for num < 0:
	>>> bg.integer_validator("num", -3)
	Traceback (most recent call last):
	...
	ValueError: num must be greater than 0

Checking for non-integer types:
	>>> bg.integer_validator("name", "modeste")
	Traceback (most recent call last):
	...
	TypeError: name must be an integer
	>>> bg.integer_validator("float", 6.8)
	Traceback (most recent call last):
	...
	TypeError: float must be an integer

Checking for no args in integer_validator:
	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Checking when one args is passed in integer_validator:
	>>> bg.integer_validator("num")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Checking for too many args in integer_validator:
	>>> bg.integer_validator("num", 1, 4)
	Traceback (most recent call last):
	...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

